// Prebuild configuration - in case the build itself has dependencies
buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-gae-plugin:0.6.1'
    }
}

apply plugin: 'gae'

repositories {
	mavenCentral()
}

dependencies {
	gaeSdk (
		"com.google.appengine:appengine-java-sdk:1.6.5"
	)
	compile (
		// Jersey
		"com.sun.jersey:jersey-server:1.12",
		"com.sun.jersey:jersey-servlet:1.12",
		"com.sun.jersey:jersey-json:1.12",
		"com.sun.jersey:jersey-grizzly2:1.12",
		"com.sun.jersey:jersey-core:1.12",
		
		// JAXRS
		"javax.ws.rs:jsr311-api:1.1.1"
	)
}

gae {
    httpPort = 80
	downloadSdk = true

    appcfg {
        email = 'dh.Lotan@gmail.com'
        passIn = true

        logs {
            severity = 1
            outputFile = file('mylogs.txt')
        }
    }
}

task configureGaeSdkRoot {
	def gaeSdkFile = project.configurations.getByName("gaeSdk").singleFile
	def filename = gaeSdkFile.name.substring(0, gaeSdkFile.name.lastIndexOf('.'))
	
	def explodedGaeSdkDir = new StringBuilder()
	explodedGaeSdkDir <<= project.buildDir
	explodedGaeSdkDir <<= System.getProperty('file.separator')
	explodedGaeSdkDir <<= "exploded-gae-sdk"
	
	def gaeSdkRootDir = new File(explodedGaeSdkDir.toString(), filename)
	System.properties[trabitGaeSdkRootEnvVar] = gaeSdkRootDir.toString();
	println 'App Engine SDK root set to: ' + System.properties[trabitGaeSdkRootEnvVar]
}